<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2023-04-17T11:20:45.0452993" />
  <contentHeader name="OOP_Curso" modificationDateTime="2023-04-17T11:20:45.05213">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="st_Rectangulo">
        <baseType>
          <struct>
            <variable name="rASide">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Parámetro de entrada que contiene el lado A del rectangulo.</xhtml>
              </documentation>
            </variable>
            <variable name="rBSide">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Parámetro de entrada que contiene el lado B del rectangulo.	</xhtml>
              </documentation>
            </variable>
            <variable name="rArea">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Valor del area</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE st_Rectangulo :
STRUCT
   rASide    	: REAL; // Parámetro de entrada que contiene el lado A del rectangulo.
   rBSide    	: REAL; // Parámetro de entrada que contiene el lado B del rectangulo.	
   rArea		: REAL; // Valor del area
END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dd70f93a-d982-45c2-b6bc-bd742d42884e</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="stMotorCtrl">
        <baseType>
          <struct>
            <variable name="rTpoAcelDecel">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tiempo para acelerar/decelerar hasta alcanazar la velocidad.</xhtml>
              </documentation>
            </variable>
            <variable name="rVelRpm">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Velocidad en RPM.</xhtml>
              </documentation>
            </variable>
            <variable name="xMotorOff">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bit de paro ON.</xhtml>
              </documentation>
            </variable>
            <variable name="xMotorOn">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bit de marcha OFF.	</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE stMotorCtrl :
STRUCT
	rTpoAcelDecel :REAL; // Tiempo para acelerar/decelerar hasta alcanazar la velocidad.
	rVelRpm       :REAL; // Velocidad en RPM.
	xMotorOff     :BOOL; // Bit de paro ON.
	xMotorOn      :BOOL   ; // Bit de marcha OFF.	
END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2fa7d62e-97b0-453c-a8f1-3cee677f3d5f</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="_11_Puntero_y_Referencia" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
SR_Main_01();

SR_Main_02();

SR_Main_03();

SR_Main_04();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM _11_Puntero_y_Referencia
VAR
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8187cf33-583d-4284-b40a-6fe760f59fca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Fc_AreaCalcPoint" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="i_ptstRect">
              <type>
                <pointer>
                  <baseType>
                    <derived name="st_Rectangulo" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Puntero de entrada con la dirección de la estructura.</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// El valor del area, de la estructura indicada por la dirección del puntero es igual al
// valor del lado A de la estructura indicada por la dirección del puntero por
// el valor del lado B de la estructura indicada por la dirección del puntero
i_ptstRect^.rArea := i_ptstRect^.rASide * i_ptstRect^.rBSide;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION Fc_AreaCalcPoint : REAL
VAR_INPUT
    i_ptstRect : POINTER TO st_Rectangulo; // Puntero de entrada con la dirección de la estructura.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d227d71a-ad5b-474b-97db-9d4e8b6cf09b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Fc_AreaCalcRef" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="i_Ref">
              <type>
                <derived name="REFERENCE TO st_Rectangulo" />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">i_Ref.rArea := i_Ref.rASide * i_Ref.rBSide;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION Fc_AreaCalcRef : REAL
VAR_INPUT
    i_Ref : REFERENCE TO st_Rectangulo;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c39b6b34-f5cf-45c1-91c8-b3d6031446f6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Fc_AreaCalcVal" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="i_rASide">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Parámetro de entrada que contiene el lado A del rectangulo.</xhtml>
              </documentation>
            </variable>
            <variable name="i_rBSide">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Parámetro de entrada que contiene el lado B del rectangulo.</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Fc_AreaCalcVal := i_rASide * i_rBSide; // Retorna el resultado de multiplicar el lado A por el lado B.</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION Fc_AreaCalcVal : REAL
VAR_INPUT
    i_rASide    : REAL; // Parámetro de entrada que contiene el lado A del rectangulo.
    i_rBSide    : REAL; // Parámetro de entrada que contiene el lado B del rectangulo.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>db19088d-b67e-469c-953d-d321dc8d7c17</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Fc_AverageReferencia" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="i_Ref">
              <type>
                <derived name="REFERENCE TO ARRAY [1..20] OF REAL" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="intIdx">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Variable indice para el bucle.</xhtml>
              </documentation>
            </variable>
            <variable name="rVAcum">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Valor acumulado.</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Retorna la suma de todos los valores divida del número de valores que son 20.

FOR intIdx:=1 TO 20 BY 1 DO
 rVAcum := rVAcum + i_Ref[intIdx];
END_FOR;
Fc_AverageReferencia := rVAcum / 20.0;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION Fc_AverageReferencia : REAL
VAR_INPUT
 i_Ref : REFERENCE TO ARRAY[1..20] OF REAL;
END_VAR
VAR
 intIdx : INT;      // Variable indice para el bucle.
 rVAcum : REAL:=0; // Valor acumulado.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1d5d4f7d-f36b-47bb-a9b6-c0e808cf08df</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Fc_AverageValues" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="i_REALV1">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 1</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV2">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 2</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV3">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 3</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV4">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 4</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV5">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 5</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV6">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 6</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV7">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 7</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV8">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 8</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV9">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 9</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV10">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 10</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV11">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 11</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV12">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 12</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV13">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 13</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV14">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 14</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV15">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 15</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV16">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 16</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV17">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 17</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV18">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 18</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV19">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 19</xhtml>
              </documentation>
            </variable>
            <variable name="i_REALV20">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor posición 20</xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">//Retorna la suma de todos los valores dividida del número de valores que son 20.

Fc_AverageValues := (i_REALV1 + i_REALV2 + i_REALV3 + i_REALV4 + i_REALV5 + i_REALV6 + i_REALV7 + 
                    i_REALV8 + i_REALV9 + i_REALV10 + i_REALV11 + i_REALV12 + i_REALV13 + 
                    i_REALV14 + i_REALV15 + i_REALV16 + i_REALV17 + i_REALV18 + 
                    i_REALV19 + i_REALV20) / 20.0 ;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION Fc_AverageValues : REAL
VAR_INPUT
    i_REALV1  : REAL; //Valor posición 1
    i_REALV2  : REAL; //Valor posición 2
    i_REALV3  : REAL; //Valor posición 3
    i_REALV4  : REAL; //Valor posición 4
    i_REALV5  : REAL; //Valor posición 5
    i_REALV6  : REAL; //Valor posición 6
    i_REALV7  : REAL; //Valor posición 7
    i_REALV8  : REAL; //Valor posición 8
    i_REALV9  : REAL; //Valor posición 9
    i_REALV10 : REAL; //Valor posición 10
    i_REALV11 : REAL; //Valor posición 11
    i_REALV12 : REAL; //Valor posición 12
    i_REALV13 : REAL; //Valor posición 13
    i_REALV14 : REAL; //Valor posición 14
    i_REALV15 : REAL; //Valor posición 15
    i_REALV16 : REAL; //Valor posición 16
    i_REALV17 : REAL; //Valor posición 17
    i_REALV18 : REAL; //Valor posición 18
    i_REALV19 : REAL; //Valor posición 19
    i_REALV20 : REAL; //Valor posición 20
END_VAR

</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f5b1c6b0-ad6b-4a2a-8d6a-86db6d8c8d59</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SR_Main_01" pouType="program">
        <interface>
          <localVars>
            <variable name="inLocalAway">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Variable integer local de SR_Main_01 para ser accedida externamente</xhtml>
              </documentation>
            </variable>
            <variable name="aR20">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declara un array de 20 elementos del tipo REAL.</xhtml>
              </documentation>
            </variable>
            <variable name="inIndex">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declara la variable de indice del array para el acceso indirecto</xhtml>
              </documentation>
            </variable>
            <variable name="xNewVal">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Indica que hay una nueva lectura del sensor de fuerza.</xhtml>
              </documentation>
            </variable>
            <variable name="rFuerza">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Valor de fuerza del sensor.</xhtml>
              </documentation>
            </variable>
            <variable name="stRectangulo1">
              <type>
                <derived name="st_Rectangulo" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura que contiene los datos del rectangulo1 A, B y su area</xhtml>
              </documentation>
            </variable>
            <variable name="stRectangulo2">
              <type>
                <derived name="st_Rectangulo" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura que contiene los datos del rectangulo2 A, B y su area</xhtml>
              </documentation>
            </variable>
            <variable name="stRectangulo3">
              <type>
                <derived name="st_Rectangulo" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura que contiene los datos del rectangulo3 A, B y su area</xhtml>
              </documentation>
            </variable>
            <variable name="refRectangulo">
              <type>
                <derived name="REFERENCE TO st_Rectangulo" />
              </type>
              <initialValue>
                <simpleValue value="stRectangulo3" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Hace Referencia a stRectangulo3   </xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Ejemplo01: Se asigna valores del 1 al 20 a cada elemento del array mediante un bucle.
FOR inIndex:=1 TO 20 BY 1 DO  // Se empieza por el valor de la variable indice a 1, hasta 20
    aR20[inIndex] := inIndex; // Al elemento aR20[inIndex] se le asigna el valor de inIndex
END_FOR;                      // Se incrementa inIndex y se repite el proceso.

// Ejemplo02: Creamos un FIFO en el que guardamos un valor analógico de fuera a cada impulso de la señal xNewVal.
IF xNewVal THEN                // Si hay un nuevo valor de fuerza realizamos el codigo.
    xNewVal := FALSE;          // Reset de la señal xNewVal.

    FOR inIndex:=20 TO 2 BY -1 DO // Variable indice a 20, hasta 2.
        aR20[inIndex] := aR20[inIndex-1]; //Desplazamiento de los valores en el FIFO ---&gt;
    END_FOR;                             // Se decrementa inIndex y se repite el proceso.

    aR20[1] := rFuerza; // Entrada del valor de fuerza en el primer elemento del FIFO.
END_IF

//*********************************************************************************************************

// Asignación de valores a los lados de los tres rectángulos.

// Asignación de valores de los lados del rectángulo 1
stRectangulo1.rAside := 44; //Valor del lado A.
stRectangulo1.rBside := 32; //Valor del lado B.

// Asignación de valores de los lados del rectángulo 2
stRectangulo2.rAside := 12.8; //Valor del lado A.
stRectangulo2.rBside := 320.4; //Valor del lado B.

// Asignación de valores de los lados del rectángulo 3
stRectangulo3.rAside := 1024.2; //Valor del lado A.
stRectangulo3.rBside := 2048.4; //Valor del lado B.

// Cálculo del área del rectángulo pasando valores a la función
stRectangulo1.rArea := Fc_AreaCalcVal(i_rAside:=stRectangulo1.rAside, i_rBside:= stRectangulo1.rBside);

// Cálculo del área del rectángulo pasando un puntero a la función
Fc_AreaCalcPoint(ADR(stRectangulo2));

// Cálculo del área del rectángulo pasando una referencia a la función
Fc_AreaCalcRef(refRectangulo);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM SR_Main_01
VAR
	inLocalAway : INT; // Variable integer local de SR_Main_01 para ser accedida externamente
END_VAR
	
VAR
    aR20: ARRAY[1..20] OF REAL; //Declara un array de 20 elementos del tipo REAL.
    inIndex: INT; //Declara la variable de indice del array para el acceso indirecto
    xNewVal: BOOL; //Indica que hay una nueva lectura del sensor de fuerza.
    rFuerza: REAL; //Valor de fuerza del sensor.
END_VAR

VAR 
    stRectangulo1 : st_Rectangulo; // Estructura que contiene los datos del rectangulo1 A, B y su area
    stRectangulo2 : st_Rectangulo; // Estructura que contiene los datos del rectangulo2 A, B y su area
    stRectangulo3 : st_Rectangulo; // Estructura que contiene los datos del rectangulo3 A, B y su area

    refRectangulo : REFERENCE TO st_Rectangulo := stRectangulo3; // Hace Referencia a stRectangulo3   
END_VAR

</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5053f9db-5f78-45ed-a6f8-173f0caca697</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SR_Main_02" pouType="program">
        <interface>
          <localVars>
            <variable name="in01">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declaración de la variable in01 de tipo entero.</xhtml>
              </documentation>
            </variable>
            <variable name="in02">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="123" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declaración e inicialización de la variable in02 de tipo entero.</xhtml>
              </documentation>
            </variable>
            <variable name="in03">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declaración de la variable in03 de tipo entero.</xhtml>
              </documentation>
            </variable>
            <variable name="pint">
              <type>
                <pointer>
                  <baseType>
                    <INT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Declaración de un puntero para acceder a variables del tipo entero.</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Ejemplo de uso básico de los operadores ADR y del operador de contenido ^
// Se muestra como asignar a un puntero la dirección de memoria de una variable y como leer/escribir
// así como un ejemplo de acceso a variables locales de otros programas.

pint := ADR(in01); //Asignamos al puntero la dirección de memoria donde se ubica la variable in01.
pint^ := 44;     //A la posición de memoria indicada por el puntero, le asignamos el valor 44
                 //Por tanto a la variable in01 se le ha escrito el valor 44.

in02 := in01; // in02 será igual a 44.

pint := ADR(in02); //Cambiamos la dirección para acceder a la dirección de la variable in02.
in03 := pint^; // in03 tomara el valor del contenido de la posición de memoria contenida en el
               // que hemos asignado la dirección de in02, por tanto in03= 123.

pint := ADR(SR_Main_01.inLocalAway); //Cargamos la dirección de memoria de una variable local de 
                                     // otro programa, la que sería inaccesible por otros medios.
pint^ := 240 ; // La varible local del programa SR_Main_01.inLocalAway tomará el valor 240  </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM SR_Main_02
VAR
    in01    : INT; //Declaración de la variable in01 de tipo entero.
    in02    : INT := 123; //Declaración e inicialización de la variable in02 de tipo entero.
    in03    : INT; //Declaración de la variable in03 de tipo entero.

    pint    : POINTER TO INT; //Declaración de un puntero para acceder a variables del tipo entero.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f83be4e7-8600-44cf-bc6d-45274d523f69</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SR_Main_03" pouType="program">
        <interface>
          <localVars>
            <variable name="stMotor_01">
              <type>
                <derived name="stMotorCtrl" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura de control del motor 1</xhtml>
              </documentation>
            </variable>
            <variable name="stMotor_02">
              <type>
                <derived name="stMotorCtrl" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura de control del motor 2</xhtml>
              </documentation>
            </variable>
            <variable name="stMotor_03">
              <type>
                <derived name="stMotorCtrl" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Estructura de control del motor 3</xhtml>
              </documentation>
            </variable>
            <variable name="pstMotorCtrl">
              <type>
                <pointer>
                  <baseType>
                    <derived name="stMotorCtrl" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Puntero para acceder a estructuras del tipo stMotorCtrl.</xhtml>
              </documentation>
            </variable>
            <variable name="xMarcha">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Pulsador marcha motores.</xhtml>
              </documentation>
            </variable>
            <variable name="aintFIFO">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Array de 20 enteros.</xhtml>
              </documentation>
            </variable>
            <variable name="aintFIFO2">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Array de 20 enteros.</xhtml>
              </documentation>
            </variable>
            <variable name="paint">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="20" />
                      <baseType>
                        <INT />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Puntero al array.</xhtml>
              </documentation>
            </variable>
            <variable name="pint">
              <type>
                <pointer>
                  <baseType>
                    <INT />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Puntero a un entero.</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Ejemplo básico de como acceder a estructuras de datos mediante punteros.
// La estructura de datos empleada es una llamada a stMotorCtrl, que coincide un bit de marcha, otro de paro y
// valores de velocidad en Rpms y tiempo de aceleración/deceleración.

// Asignamos valores a la estructura para el control del motor 1.

stMotor_01.rTpoAcelDecel := 5.4; // Tiempo para acelerar/decelerar hasta alcanazar la velocidad.
stMotor_01.rVelRpm := 1436.2; // Velocidad en RPM.
stMotor_01.xMotorOff := TRUE; // Bit de paro ON.
stMotor_01.xMotorOn := FALSE   ; // Bit de marcha OFF.

pstMotorCtrl := ADR(stMotor_01); // Cargamos la dirección de memoria de la estructura del motor 1
stMotor_02 := pstMotorCtrl^; // Copia el contenido de la zona de memoria apuntada a la
                             // estructura del motor 2, en este caso el resultado es el mismo
                             // que se obtendría con stMotor_02:= stMotor_01;

stMotor_03 := stMotor_02; // Copia los mismos valores al motor 3;

IF xMarcha THEN         // Si se pulsa marcha máquina
    pstMotorCtrl^.xMotorOn := TRUE; // Se activa el bit de marcha al que apunta el puntero (stMotor_01).
    pstMotorCtrl^.xMotorOff := FALSE; // Se desactiva el bit de paro al que apunta el puntero (stMotor_01)
END_IF

//***************************************************************************************************************
// Ejemplo basico de como acceder a arrays mediante punteros:
paint := ADR(aintFIFO); // _Asignamos la dirección del array al puntero.
paint^[3] := 4; // Dentro del array podemos acceder a un elemento en concreto
aintFIFO2 := paint^; // O copiar el array apuntado entero, sobre otro array
pint := paint + (4 * SIZEOF (INT)); // Tambien se puede crear un puntero a un INT para acceder a uno de los
                                    // elementos del array. Tomamos la dirección inicial del array y le
                                    // sumampos un offeset de tantos bytes como se necesitan para el tipo de 
                                    // datos INT y lo multiplicamos por el indice del array al que queremos
                                    // acceder. SIZEOF (TYPE) retorna el número de bytes según el tipo de datos.

pint^ := 5;                         // Asignamos el valor de 5, aintFIFO[5]:=5 sería lo mismo. </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM SR_Main_03
VAR
    stMotor_01 : stMotorCtrl; // Estructura de control del motor 1
    stMotor_02 : stMotorCtrl; // Estructura de control del motor 2
    stMotor_03 : stMotorCtrl; // Estructura de control del motor 3
    pstMotorCtrl : POINTER TO stMotorCtrl; // Puntero para acceder a estructuras del tipo stMotorCtrl.
    xMarcha : BOOL; // Pulsador marcha motores.
END_VAR

VAR
    aintFIFO    : ARRAY[1..20] OF INT; // Array de 20 enteros.
    aintFIFO2   : ARRAY[1..20] OF INT; // Array de 20 enteros.
    paint       : POINTER TO ARRAY[1..20] OF INT; // Puntero al array.
    pint        : POINTER TO INT; // Puntero a un entero.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dcba6455-3390-47ac-92b8-2af567502378</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SR_Main_04" pouType="program">
        <interface>
          <localVars>
            <variable name="arFIFO">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FIFO con los valores de fuerza registrados.</xhtml>
              </documentation>
            </variable>
            <variable name="intIdx">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Variable de indice.</xhtml>
              </documentation>
            </variable>
            <variable name="rIncAng">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Valor de incremento angular para generación de senoide.</xhtml>
              </documentation>
            </variable>
            <variable name="rValAng">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Valor actual de angulo.</xhtml>
              </documentation>
            </variable>
            <variable name="rValSin">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Amplitud de la senoide superpuesta.</xhtml>
              </documentation>
            </variable>
            <variable name="rVMed">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Resultado del cálculo.</xhtml>
              </documentation>
            </variable>
            <variable name="refFIFO">
              <type>
                <derived name="REFERENCE TO ARRAY [1..20] OF REAL" />
              </type>
              <initialValue>
                <simpleValue value="arFIFO" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Crea una referencia y la asigna a arFIFO</xhtml>
              </documentation>
            </variable>
            <variable name="rMedRef">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Resultado del cálculo para el ejemplo de pase de valores por Ref.</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Ejemplo de como realizar el cálculo del valor medio de las lecturas de fuerza contenidas en arFIFO
// mediante la función Fc_AverageValues (Pase de parámetros por valores) y Fc_AverageReferencia (Pase de
// parámetros por referencia)
// Lo que se pretende es ver las ventajas del pase por referencia

// Asignación de valores para llenar el FIFO a efectos de tener algunos valores para el cálculo de la media
// al valor 124 le superpone una variación senoidal de amplitud 6

rIncAng := (2 * 3.14159) / 20.0; // 2 * PI Radianes dividido entre 20 puntos.
rValAng := 0.0;                   // Valor inicial del angulo.

FOR intIdx :=1 TO 20 BY 1 DO
 rValSin := SIN(rValAng) * 6;         // Valor del seno para una amplitud de 6
 arFIFO[intIdx] := 124.0 + rValSin;  // A un nivel de 124.0 se superpone un seno de amplitud 6.
 rValAng := rValAng + rIncAng;       // Próximo valor angular. 
END_FOR;

// Con el FIFO de valores llamaremos a la función para el cálculo de la media pasando valores.
// Lo que no sería para nada adecuado por tratarse de muchos parámetros.

rVMed:= Fc_AverageValues( i_REALV1  := arFIFO[1],
                          i_REALV2  := arFIFO[2],
                          i_REALV3  := arFIFO[3],
                          i_REALV4  := arFIFO[4], 
                          i_REALV5  := arFIFO[5],
                          i_REALV6  := arFIFO[6], 
                          i_REALV7  := arFIFO[7],
                          i_REALV8  := arFIFO[8],
                          i_REALV9  := arFIFO[9],
                          i_REALV10 := arFIFO[10],
                          i_REALV11 := arFIFO[11],
                          i_REALV12 := arFIFO[12],
                          i_REALV13 := arFIFO[13],
                          i_REALV14 := arFIFO[14],
                          i_REALV15 := arFIFO[15],
                          i_REALV16 := arFIFO[16],
                          i_REALV17 := arFIFO[17],
                          i_REALV18 := arFIFO[18],
                          i_REALV19 := arFIFO[19],
                          i_REALV20 := arFIFO[20]);

// Con el FIFO lleno de valores llamaremos a la función para el cálculo de la media pasando valores por referencia
// para ver lo sencillo que resulta en este caso.

rMedRef := Fc_AverageReferencia(i_Ref:=refFIFO);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM SR_Main_04
VAR
 arFIFO  : ARRAY[1..20] OF REAL; // FIFO con los valores de fuerza registrados.
 intIdx  : INT;                  // Variable de indice.
 rIncAng : REAL;                 // Valor de incremento angular para generación de senoide.
 rValAng : REAL;                 // Valor actual de angulo.
 rValSin : REAL;                 // Amplitud de la senoide superpuesta.
 rVMed   : REAL;                 // Resultado del cálculo.

 refFIFO : REFERENCE TO ARRAY[1..20] OF REAL := arFIFO; // Crea una referencia y la asigna a arFIFO
 rMedRef : REAL;           // Resultado del cálculo para el ejemplo de pase de valores por Ref.
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fe911f1e-acb6-40f7-b4de-63747fe70f51</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="11_Puntero_y_Referencia">
          <Object Name="SR_Main_02" ObjectId="f83be4e7-8600-44cf-bc6d-45274d523f69" />
          <Object Name="SR_Main_01" ObjectId="5053f9db-5f78-45ed-a6f8-173f0caca697" />
          <Object Name="_11_Puntero_y_Referencia" ObjectId="8187cf33-583d-4284-b40a-6fe760f59fca" />
          <Object Name="SR_Main_03" ObjectId="dcba6455-3390-47ac-92b8-2af567502378" />
          <Object Name="stMotorCtrl" ObjectId="2fa7d62e-97b0-453c-a8f1-3cee677f3d5f" />
          <Object Name="Fc_AreaCalcVal" ObjectId="db19088d-b67e-469c-953d-d321dc8d7c17" />
          <Object Name="Fc_AreaCalcPoint" ObjectId="d227d71a-ad5b-474b-97db-9d4e8b6cf09b" />
          <Object Name="st_Rectangulo" ObjectId="dd70f93a-d982-45c2-b6bc-bd742d42884e" />
          <Object Name="Fc_AreaCalcRef" ObjectId="c39b6b34-f5cf-45c1-91c8-b3d6031446f6" />
          <Object Name="Fc_AverageValues" ObjectId="f5b1c6b0-ad6b-4a2a-8d6a-86db6d8c8d59" />
          <Object Name="Fc_AverageReferencia" ObjectId="1d5d4f7d-f36b-47bb-a9b6-c0e808cf08df" />
          <Object Name="SR_Main_04" ObjectId="fe911f1e-acb6-40f7-b4de-63747fe70f51" />
        </Folder>
      </ProjectStructure>
    </data>
  </addData>
</project>